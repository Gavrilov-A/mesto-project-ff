{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-41\",\r\n  headers: {\r\n    authorization: \"b7683168-adb4-4935-b993-410577bd8799\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst getResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка ${res.status}`);\r\n};\r\n\r\nconst getAllCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nconst getUserData = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nconst updataUserData = (userName, userAbout) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: userName,\r\n      about: userAbout,\r\n    }),\r\n  }).then(getResponse);\r\n};\r\n\r\nconst updataUserAvatar = (avatarUrl) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatarUrl,\r\n    }),\r\n  }).then(getResponse);\r\n};\r\n\r\nconst createCard = (nameCard, linkCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameCard,\r\n      link: linkCard,\r\n    }),\r\n  }).then(getResponse);\r\n};\r\n\r\nconst deleteCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nconst addLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nconst removeLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n};\r\n\r\nexport {\r\n  getAllCards,\r\n  getUserData,\r\n  updataUserData,\r\n  updataUserAvatar,\r\n  createCard,\r\n  deleteCard,\r\n  addLike,\r\n  removeLike,\r\n};\r\n","import { addLike, removeLike, deleteCard } from \"./api.js\";\r\n\r\nlet idCardForDelete;\r\nlet сardForDelete;\r\n\r\nconst handleDeleteClick = (id, card) => {\r\n  idCardForDelete = id;\r\n  сardForDelete = card;\r\n  deleteCard(idCardForDelete);\r\n  сardForDelete.remove();\r\n};\r\n\r\nconst likeCard = (cardId, likeButton, likeCount) => {\r\n  if (likeButton.classList.contains(\"card__like-button_is-active\")) {\r\n    removeLike(cardId).then((cardData) => {\r\n      if (cardData.likes.length === 0) {\r\n        likeCount.textContent = \"\";\r\n      } else {\r\n        likeCount.textContent = cardData.likes.length;\r\n      }\r\n    });\r\n    likeButton.classList.remove(\"card__like-button_is-active\");\r\n  } else {\r\n    addLike(cardId).then((cardData) => {\r\n      likeCount.textContent = cardData.likes.length;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err); \r\n    });\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n};\r\n\r\nconst newCard = (userId, cardData, likeCard, openImage, handleDeleteClick) => {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n  const likeCount = cardElement.querySelector(\".card__like-count\");\r\n  const ownerCardId = cardData.owner._id;\r\n  const userLikeInfo = cardData.likes;\r\n\r\n  userLikeInfo.forEach((user) => {\r\n    if (user._id === ownerCardId) {\r\n      likeButton.classList.add(\"card__like-button_is-active\");\r\n    }\r\n  });\r\n\r\n  if (cardData.likes.length !== 0) {\r\n    likeCount.textContent = cardData.likes.length;\r\n  }\r\n\r\n  if (userId !== ownerCardId) {\r\n    deleteButton.style.display = \"none\";\r\n  }\r\n  cardElement.querySelector(\".card__title\").textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n\r\n  deleteButton.addEventListener(\"click\", () => {\r\n    handleDeleteClick(cardData._id, cardElement);\r\n  });\r\n\r\n  likeButton.addEventListener(\"click\", () => {\r\n    likeCard(cardData._id, likeButton, likeCount);\r\n  });\r\n\r\n  cardImage.addEventListener(\"click\", () => {\r\n    openImage(cardData);\r\n  });\r\n\r\n  return cardElement;\r\n};\r\n\r\nexport { newCard, likeCard, handleDeleteClick };\r\n","let activeModal = null;\r\n\r\nconst closeModal = (popup) => {\r\n  document.removeEventListener(\"keydown\", pressButtonEsc);\r\n  popup.classList.remove(\"popup_is-opened\");\r\n};\r\n\r\nconst openModal = (popup) => {\r\n  activeModal = popup;\r\n  document.addEventListener(\"keydown\", pressButtonEsc);\r\n  popup.classList.add(\"popup_is-opened\");\r\n};\r\n\r\nconst pressButtonEsc = (evt) => {\r\n  if (evt.key === \"Escape\") {\r\n    closeModal(activeModal);\r\n  }\r\n};\r\n\r\nexport { closeModal, openModal };\r\n","const validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  errorElement.textContent = \"\";\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage);\r\n  } else {\r\n    hideInputError(formElement, inputElement);\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n\r\nconst clearValidation = (profileForm, validationConfig) => {\r\n  const buttonElement = profileForm.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  const inputList = Array.from(\r\n    profileForm.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(profileForm, inputElement);\r\n  });\r\n  toggleButtonState(inputList, buttonElement);\r\n  profileForm.reset();\r\n};\r\n\r\nconst setEventListeners = (formElement) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      checkInputValidity(formElement, inputElement);\r\n      toggleButtonState(inputList, buttonElement);\r\n    });\r\n  });\r\n};\r\n\r\nconst enableValidation = (validationConfig) => {\r\n  const formList = document.querySelectorAll(validationConfig.formSelector);\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", (evt) => {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(formElement);\r\n  });\r\n};\r\n\r\nexport { enableValidation, clearValidation, validationConfig };\r\n","import \"../pages/index.css\";\r\nimport { newCard, handleDeleteClick, likeCard } from \"../components/card.js\";\r\nimport { closeModal, openModal } from \"../components/modal.js\";\r\nimport {\r\n  enableValidation,\r\n  validationConfig,\r\n  clearValidation,\r\n} from \"../components/validation.js\";\r\nimport {\r\n  getUserData,\r\n  getAllCards,\r\n  updataUserData,\r\n  updataUserAvatar,\r\n  createCard,\r\n} from \"../components/api.js\";\r\n\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\nconst popups = document.querySelectorAll(\".popup\");\r\nconst profileAddButton = document.querySelector(\".profile__add-button\");\r\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupImages = document.querySelector(\".popup_type_image\");\r\nconst popupDelete = document.querySelector(\".popup_type_delete-card\");\r\nconst popupUpdateAvatar = document.querySelector(\".popup_type_update-avatar\");\r\nconst formEditProfile = document.forms[\"edit-profile\"];\r\nconst formEditAvatar = document.forms[\"update-avatar\"];\r\nconst nameInput = formEditProfile.elements.name;\r\nconst aboutInput = formEditProfile.elements.description;\r\nconst formAddCards = document.forms[\"new-place\"];\r\nconst namePlaceInput = formAddCards.elements[\"place-name\"];\r\nconst linkImageInput = formAddCards.elements.link;\r\nconst inputAvatarUrl = formEditAvatar.elements[\"avatar-url\"];\r\nconst nameProfile = document.querySelector(\".profile__title\");\r\nconst aboutProfile = document.querySelector(\".profile__description\");\r\nconst popupImage = document.querySelector(\".popup__image\");\r\nconst popupCaption = document.querySelector(\".popup__caption\");\r\nconst avatarProfile = document.querySelector(\".profile__image\");\r\nlet userId = null;\r\n\r\nconst editAvatar = (evt) => {\r\n  evt.preventDefault();\r\n  const urlAvatar = inputAvatarUrl.value;\r\n  const but = popupUpdateAvatar.querySelector(\".popup__button\");\r\n  but.textContent = \"Сохранение...\";\r\n  updataUserAvatar(urlAvatar).then((profile) => {\r\n    avatarProfile.style.backgroundImage = \"url(\" + profile.avatar + \")\";\r\n    but.textContent = \"Сохранить\";\r\n  })\r\n  .catch((err) => {\r\n      console.log(err); \r\n  });\r\n  closeModal(popupUpdateAvatar);\r\n};\r\n\r\nconst editProfile = (evt) => {\r\n  evt.preventDefault();\r\n  const but = popupEdit.querySelector(\".popup__button\");\r\n  but.textContent = \"Редактирование...\";\r\n  const name = nameInput.value;\r\n  const about = aboutInput.value;\r\n  nameProfile.textContent = name;\r\n  aboutProfile.textContent = about;\r\n  updataUserData(name, about).then((user) => {\r\n    nameProfile.textContent = user.name;\r\n    aboutProfile.textContent = user.about;\r\n    but.textContent = \"Редактировать\";\r\n  })\r\n  .catch((err) => {\r\n      console.log(err); \r\n    });\r\n  closeModal(popupEdit);\r\n};\r\n\r\nconst addCards = (evt) => {\r\n  evt.preventDefault();\r\n  const nameCard = namePlaceInput.value;\r\n  const linkCard = linkImageInput.value;\r\n  const but = popupNewCard.querySelector(\".popup__button\");\r\n  but.textContent = \"Сохранение...\";\r\n  createCard(nameCard, linkCard).then((cardData) => {\r\n    const card = newCard(\r\n      cardData.owner._id,\r\n      {\r\n        name: nameCard,\r\n        link: linkCard,\r\n        owner: { _id: cardData.owner._id },\r\n        likes: cardData.likes,\r\n      },\r\n      likeCard,\r\n      openImage,\r\n      handleDeleteClick\r\n    );\r\n    but.textContent = \"Сохранить\";\r\n    cardsContainer.prepend(card);\r\n  })\r\n  .catch((err) => {\r\n      console.log(err); \r\n    });\r\n\r\n  formAddCards.reset();\r\n  closeModal(popupNewCard);\r\n};\r\n\r\nconst openImage = (cardData) => {\r\n  popupImage.setAttribute(\"src\", cardData.link);\r\n  popupImage.setAttribute(\"alt\", cardData.name);\r\n  popupCaption.textContent = cardData.name;\r\n  openModal(popupImages);\r\n};\r\n\r\nconst initCards = () => {\r\n  Promise.all([getAllCards(), getUserData()]).then(([cards, userData]) => {\r\n    userId = userData._id;\r\n    nameProfile.textContent = userData.name;\r\n    aboutProfile.textContent = userData.about;\r\n    avatarProfile.style.backgroundImage = \"url(\" + userData.avatar + \")\";\r\n    const cardsList = Array.from(cards);\r\n    cardsList.forEach((cardData) => {\r\n      const card = newCard(\r\n        userId,\r\n        cardData,\r\n        likeCard,\r\n        openImage,\r\n        handleDeleteClick\r\n      );\r\n      cardsContainer.append(card);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n      console.log(err); \r\n    });\r\n};\r\n\r\npopups.forEach((modal) => {\r\n  modal.classList.add(\"popup_is-animated\");\r\n  modal.addEventListener(\"click\", (evt) => {\r\n    if (\r\n      evt.target.classList.contains(\"popup_is-opened\") ||\r\n      evt.target.classList.contains(\"popup__close\")\r\n    ) {\r\n      closeModal(modal);\r\n    }\r\n  });\r\n});\r\n\r\nprofileAddButton.addEventListener(\"click\", () => {\r\n  clearValidation(formAddCards, validationConfig);\r\n  openModal(popupNewCard);\r\n});\r\n\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n  clearValidation(formEditProfile, validationConfig);\r\n  nameInput.value = nameProfile.textContent;\r\n  aboutInput.value = aboutProfile.textContent;\r\n  openModal(popupEdit);\r\n});\r\n\r\navatarProfile.addEventListener(\"click\", () => {\r\n  clearValidation(formEditAvatar, validationConfig);\r\n  openModal(popupUpdateAvatar);\r\n});\r\n\r\nformEditProfile.addEventListener(\"submit\", editProfile);\r\n\r\nformAddCards.addEventListener(\"submit\", addCards);\r\n\r\nformEditAvatar.addEventListener(\"submit\", editAvatar);\r\n\r\nenableValidation(validationConfig);\r\n\r\ninitCards();\r\n\r\nexport { handleDeleteClick };\r\n"],"names":["сardForDelete","config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","concat","status","handleDeleteClick","id","card","cardId","fetch","method","then","remove","likeCard","likeButton","likeCount","classList","contains","removeLike","cardData","likes","length","textContent","addLike","catch","err","console","log","add","newCard","userId","openImage","cardElement","document","querySelector","content","cloneNode","cardImage","deleteButton","ownerCardId","owner","_id","forEach","user","style","display","name","src","link","alt","addEventListener","activeModal","closeModal","popup","removeEventListener","pressButtonEsc","openModal","evt","key","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","disabled","clearValidation","profileForm","Array","from","querySelectorAll","reset","setEventListeners","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","cardsContainer","popups","profileAddButton","profileEditButton","popupNewCard","popupEdit","popupImages","popupUpdateAvatar","formEditProfile","forms","formEditAvatar","nameInput","elements","aboutInput","description","formAddCards","namePlaceInput","linkImageInput","inputAvatarUrl","nameProfile","aboutProfile","popupImage","popupCaption","avatarProfile","setAttribute","modal","target","value","preventDefault","but","userName","userAbout","about","body","JSON","stringify","nameCard","linkCard","createCard","prepend","avatarUrl","urlAvatar","avatar","profile","backgroundImage","enableValidation","all","_ref","_ref2","cards","userData","append"],"sourceRoot":""}